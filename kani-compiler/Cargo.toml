# Copyright Kani Contributors
# SPDX-License-Identifier: Apache-2.0 OR MIT

[package]
name = "kani-compiler"
version = "0.43.0"
edition = "2021"
license = "MIT OR Apache-2.0"
publish = false

[dependencies]
lean_ast = { path = "../lean_ast", optional = true}
cbmc = { path = "../cprover_bindings", package = "cprover_bindings", optional = true }
clap = { version = "4.4.11", features = ["derive", "cargo"] }
home = "0.5"
itertools = "0.12"
kani_metadata = {path = "../kani_metadata"}
lazy_static = "1.4.0"
num = { version = "0.4.0", optional = true }
regex = "1.7.0"
serde = { version = "1", optional = true }
serde_json = "1"
strum = "0.25.0"
strum_macros = "0.25.2"
shell-words = "1.0.0"
tracing = {version = "0.1", features = ["max_level_trace", "release_max_level_debug"]}
tracing-subscriber = {version = "0.3.8", features = ["env-filter", "json", "fmt"]}

# Future proofing: enable backend dependencies using feature.
[features]
clion = ["rustc_middle"]
default = ['lean', 'cprover']
lean = ['lean_ast']
cprover = ['cbmc', 'num', 'serde']
write_json_symtab = []

[package.metadata.rust-analyzer]
# This package uses rustc crates.
rustc_private=true


# This configuration doesn't exist so it shouldn't affect your build.
[target.'cfg(unix)'.dependencies]
# Adjust the path here to point to a local copy of the rust compiler.
# The best way is to use the rustup path. Replace <toolchain> with the
# proper name to your toolchain.
# rustc_driver = { path = "/User/muqsit/.rustup/toolchains/nightly-2023-12-18-aarch64-apple-darwin/lib/rustlib/rustc-src/rust/compiler/rustc_driver" }
# rustc_interface = { path = "/User/muqsit/.rustup/toolchains/nightly-2023-12-18-aarch64-apple-darwin/lib/rustlib/rustc-src/rust/compiler/rustc_interface" }
rustc_middle = { path = "/Users/muqsit/.rustup/toolchains/nightly-2023-12-18-aarch64-apple-darwin/lib/rustlib/rustc-src/rust/compiler/rustc_middle", optional = true }
